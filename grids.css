/*Sistema de grids*/
.row,
.column {
	box-sizing: border-box;
}

.row:before,
.row:after {
	content: " ";
	display: table;
}

.row:after {
	clear: both;
}
.column {
	position: relative;
	float: left;
}
.column + .column {
	margin-left: 1.6%;
}

.column + .column:first-of-type{
	margin-left: 0!important;
}
.col-1 {
	width: 6.86666666667%;
}

.col-2 {
	width: 15.3333333333%;
}

.col-3 {
	width: 23.8%;
}

.col-4 {
	width: 32.2666666667%;
}

.col-5 {
	width: 40.7333333333%;
}

.col-6 {
	width: 49.2%;
}

.col-7 {
	width: 57.6666666667%;
}

.col-8 {
	width: 66.1333333333%;
}

.col-9 {
	width: 74.6%;
}

.col-10 {
	width: 83.0666666667%;
}

.col-11 {
	width: 91.5333333333%;
}

.col-12 {
	width: 100%;
}
@media only screen and (max-width: 550px) {
	.col-1,
	.col-2,
	.col-3,
	.col-4,
	.col-5,
	.col-6,
	.col-7,
	.col-8,
	.col-9,
	.col-10,
	.col-11,
	.col-12 {
		width: auto;
		float: none;
	}

	.column + .column {
		margin-left: 0;
	}
}

/*Custumizar padding*/

.no-padding{
	padding: 0 0 0 0 !important; 
}
.no-padding-left {
	padding-left: 0 !important;
}
.no-padding-right{
	padding-right: 0 !important;
}
.no-padding-top{
	padding-top: 0 !important;
}
.no-padding-bottom{
	padding-bottom: 0 !important;
}

/*FlexBox*/
/*Container flexivel*/
.flex-container{
	display: flex;
}

/*Propriedade flex-direction A flex-directionpropriedade define em qual direção o contêiner deseja empilhar os itens flexíveis.*/
/*Alinhando como coluna*/
.flex-direction-column{
	display: flex;
	flex-direction: column;
}
/*Alinhando como coluna reversa*/
.flex-direction-column-reverse{
	display: flex;
	flex-direction: column-reverse;
}
/*O valor da linha empilha os itens flexíveis horizontalmente (da esquerda para a direita):*/
.flex-direction-row{
	display: flex;
	flex-direction: row;
}
/*O valor de reversão de linha empilha os itens flexíveis horizontalmente (mas da direita para a esquerda)*/
.flex-direction-row-reverse{
	display: flex;
	flex-direction: row-reverse;
}

/*A propriedade flex-wrap
A flex-wrappropriedade especifica se os itens flexíveis devem ser agrupados ou não.*/

/*O valor wrap especifica que os itens flexíveis serão agrupados, se necessário:*/
.flex-wrap {
	display: flex;
	flex-wrap: wrap;
}

/*O valor wrap-reverse especifica que os itens flexíveis serão agrupados, se necessário, na ordem inversa:*/
.flex-wrap-reverse {
	display: flex;
	flex-wrap: wrap-reverse;
}
/*A propriedade flex-flow
A flex-flowpropriedade é uma propriedade abreviada para definir as propriedades flex-directione flex-wrap.*/
.flex-row-wrap {
	display: flex;
	flex-flow: row wrap;
}

/*A propriedade justify-content
A justify-contentpropriedade é usada para alinhar os itens flexíveis:*/

/*O valor central alinha os itens flexíveis no centro do contêiner:*/
.flex-align-center {
	display: flex;
	justify-content: center;
}

/*O valor final flexível alinha os itens flexíveis no final do contêiner:*/
.flex-align-end {
	display: flex;
	justify-content: flex-end;
}

/*O valor de espaço ao redor exibe os itens flexíveis com espaço antes, entre e depois das linhas:*/
.flex-space-around {
	display: flex;
	justify-content: space-around;
}
/*O valor entre espaços exibe os itens flexíveis com espaço entre as linhas:*/
.flex-space-between {
	display: flex;
	justify-content: space-between;
}

/*A propriedade de itens de alinhamento*/

/*O valor flex-start alinha os itens flexíveis na parte superior do contêiner:*/
.flex-items-start {
	display: flex;
	align-items: flex-start;
}
/*O valor final flexível alinha os itens flexíveis na parte inferior do contêiner:*/
.flex-items-end {
	display: flex;
	align-items: flex-end;
}

/*Centralização Perfeita*/
.flex-container-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

/*Alinhamento de text*/
.txt-center{
	text-align: center !important;
}